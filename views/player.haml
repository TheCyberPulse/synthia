%html
  %link{:crossorigin => "anonymous", :href => "https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css", :integrity => "sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk", :rel => "stylesheet"}/
  %link(rel="stylesheet" type="text/css" href="style.css")
  %script{:crossorigin => "anonymous", :integrity => "sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj", :src => "https://code.jquery.com/jquery-3.5.1.slim.min.js"}
  %script{:crossorigin => "anonymous", :integrity => "sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo", :src => "https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"}
  %script{:crossorigin => "anonymous", :integrity => "sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI", :src => "https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"}
  %script{:crossorigin => "anonymous", :integrity => "sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=", :src => "https://code.jquery.com/jquery-3.5.1.min.js"}
  %link{href: "https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css", rel: "stylesheet", integrity: "sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN", crossorigin: "anonymous"}
  %script{:src => "app.js"}
%body
  %div.container-fluid
    %div.row.justify-content-center
      %img.glow.align-text-center(src="logo.png")
  %br
  %div.container-fluid
    %div.row.justify-content-center.text-center
      %div.col-4
        #current-song.container-fluid
          %div.row.container-background.rounded-corners
            #player.padding.text-center
              :javascript
                console.log(autorefresh);
                var tag = document.createElement('script');

                tag.src = "https://www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                var player;
                function onYouTubeIframeAPIReady() {
                  player = new YT.Player('player', {
                    height: '350',
                    width: '640',
                    videoId: '#{@song_queue[:current_song].empty? ? '' : @song_queue[:current_song][:song_data]['video_id']}',
                    events: {
                      'onReady': onPlayerReady,
                      'onStateChange': onPlayerStateChange
                    }
                  });
                }

                function onPlayerReady(event) {
                  event.target.playVideo();
                }

                var done = false;
                function onPlayerStateChange(event) {
                  if (event.data == YT.PlayerState.ENDED && !done) {
                    set_next_song();
                  }
                }

                function stopVideo() {
                  player.stopVideo();
                }
            %div.col-4
            %div.col-4
              %button.btn.autorefresh-on{:id => 'autorefresh', :type => "button"}
                Toggle Autorefresh
            %div.col-4
  %br
  %div.container-fluid
    %div.row.justify-content-center
      %div.col-lg
        #song-queue.container-fluid
          %table.table.table-dark
            %thead
              %tr
                %th Requester
                %th Song Title
                %th Artist
                %th URL
                %th
            %tbody
              - @song_queue[:songs].each do |song|
                %tr{"data-video-id" => "#{song[:song_data]['video_id']}", "data-requester" => "#{song[:user]}"}
                  %td.text-center= song[:user]
                  %td.text-center= song[:song_data]['title']
                  %td.text-center= song[:song_data]['author_name']
                  %td.text-center
                    %a{:title => song[:song_data]['url'], :href => song[:song_data]['url']}
                      = song[:song_data]['url']
                  %td.text-center
                    %button.btn.custom-danger.delete{:type => "button"}
                      %span.fa.fa-trash-o
